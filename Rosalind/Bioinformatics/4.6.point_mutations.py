# -*- coding: utf-8 -*-
"""
Created on Thu Oct 28 12:00:14 2021
@author: pablo

Problem
Given two strings s and t of equal length, the Hamming distance between s and t, 
denoted dH(s,t), is the number of corresponding symbols that differ in s and t. 

Given: Two DNA strings s and t of equal length (not exceeding 1 kbp).
Return: The Hamming distance dH(s,t).

"""

# Function
def hamming_distance(s,t):
    
    # Checking both sequences have the same lenght and Hamming distance can be calculated. 
    # If so, distance is calculated
    if len(s) == len(t):
        dh = 0
        # Compute Hamming distance
        for index in range(0,len(s)):
            if s[index] != t[index]:
                dh += 1
        print(dh)
    
    else:
        print("The input sequences do not have the same lenght. Hamming distance cannot be calculated")

# Test
s = "AGTTCCTTTTGAATGTCCAATTAGGCTTATATTTACAACGACCCGTCTAGTGACAAAGGCAGGCTATGCCGGTACTAAATAGTATGTGTTTACCAATTACGTTACACAGTTCTGACGATGAACGGCGGTCATTGACTTTTTATAGACGAGACATGTATAACATGTGTATCAATGGATCAAACTAAAATGAGCAGGGTATTAGTGATAGTAGCGGAGCTCAGCCGTCGCAACAGAAAATCCTCGATGTTCGTACATTGCTCGGCCGTACGAGCAGCGCTGATTAGGTCCCCGCCGGGTCTTAGCTGAATGCTTTTGGCCGATCTATTCCCTTGTCAGACCGCGCCAGTTTATAGTATAAATATTCGTGAATCTATTCTCCTATGACTATGCCCTATTCCGCATAGGGTATCACGTCTCACCCCTGCCTGCAATAGAGCCCAATTGTGGGAGACCACTTTCCGCTACGACTTCCCCGGCAGCAGCGTAGATTATCAGTTAAGCGTTTTACTAAATGGCTTGACGTCTACTGTCCATTTAGAAAAGTTACACAACGCCATGGCCAGTCGCGCGTATAAATATGCCTTCTAATTCGCGGTTGTAGAGACCGACTGACGACTTGACTTTTTGGCCCAGCTCGATGTACTATTCTCATGTAACCTTAGATCGCGCGCTGCAGTACGGGAGGGCCGACATTCTCGGGGGCTTTGGTTAGACTCTCCCGGGTTAAAGTTTGAGGTGCAAGATCTAGATGTTACGCCAACCTACCGTACGAGCCAGCGGGTCTGACCTACCAATGTAAATTTAGTCCAATTCGCGAACAGAAGCCTTGACATGAAGAGTTGCCGACTGGCCCCACGCGAGAATTAGCGTAACTCTAGGTGCGAGAAACTCATTAATCGAGTT"
t = "GGTTCAGTATCAAGCTATTGATAGCATTCCCCCTGGCTGATCCCGTGTCGTTGCAATGGGCGGGAGTGCGGGGATGAGGTTGTTTAAGTTGGCGGATTCTGTTACGCGGCTGTGAGGATGACTGTTGGACACTTGCCTCCCTCTTGAGAGACATATATAACAGTTGTATTTGGGAGTCAAGCTTTATAGTTTAACTTACATGTGACTGTAGCGGTACAATGCCTTCCTGTTTGATATTTATCGACGTTCACTCACTGCTCTCACCCCCGAGTTGCGCCCACTCGGTGGCCTACGTGTAGGCGCCGACCACTCCAGCTCCTACGATTACCACTTCAAATTGTGCTCAGCTTGTGGGACAATATTCGTGACGGAATAGGCCTATTAAGCCACCCAAAACAGCATCGGGTAAACAAAACAGCGTCTCCGGCGAACACCACCCAACCCAGGGTCGCGCTGTATGGCTTCGATTGAATCCGATGCAACAGGTCCCTACCCGTACGCACTATAGTTTGTGGTTCGACATCCACGCTCTAGCTAGAATTTGTAATGCCCCTCACCACGTATTACCCGAGCCAATTCATCGACACATTCGGGCATGTTGGTGGTAACGCACTACACATTTCTAAAAGCGACCTGGTAGTTTCAATCGGACGTACTCTTAGGTCACCCTATCCAGCGCCGGAGTGCGGGTGATCCCAGATACCTGGATTGGCAGCTCCCGGATCGACCTTTAATGTACAAGATCTAGTTTTCATACGTACCTCTCTTCCGGGCTTGAGAGTCCGTCCCAGCCAGTTGCGGTATACCCATTCGCAGACCAAAATAATAGACATCGAGAGGCGTCAACTGAATCGATCCTAGACACTCCTCTAGGCAGGGGGCGGGAACGTCTTGGATAGGGTT" 
hamming_distance(s,t)